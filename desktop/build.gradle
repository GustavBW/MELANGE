plugins {
    id('java')
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    modularity.inferModulePath = true
}
compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs += [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java'] // Adjust this path if your structure is different
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

dependencies {
    api "com.badlogicgames.gdx:gdx:$gdxVersion"
}

eclipse.project.name = appName + "-core"

project.ext.mainClassName = "gbw.melange.DesktopLauncher"
project.ext.assetsDir = new File("../assets")

import org.gradle.internal.os.OperatingSystem

tasks.register('run', JavaExec) {
    dependsOn classes
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

tasks.register('debug', JavaExec) {
    dependsOn classes
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

tasks.register('dist', Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


dist.dependsOn classes

eclipse.project.name = appName + "-desktop"
