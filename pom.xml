<?xml version="1.0" encoding="UTF-8"?>
        <project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gbw.melange</groupId>
    <version>1.0-SNAPSHOT</version>
    <artifactId>melange</artifactId>
    <name>MELANGE</name>

    <modules>
        <module>core</module>
        <module>ptg</module>
        <module>events</module>
        <module>desktop</module>
    </modules>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.version>3.12.1</maven.compiler.version>
        <maven.javadoc.version>3.6.3</maven.javadoc.version>
        <maven.resources.version>3.2.0</maven.resources.version>
        <maven.source.version>3.2.1</maven.source.version>
        <maven.gpg.version>1.6</maven.gpg.version>
        <jdk.version>21</jdk.version>
        <junit.version>4.13.2</junit.version>
        <gdx.version>1.12.1</gdx.version>
        <jnigen.dir>that-jnigen-guy</jnigen.dir>
        <module.out.dir>compiled-modules</module.out.dir>
        <module.dep.out.dir>libs</module.dep.out.dir>
    </properties>

    <packaging>pom</packaging>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase> <!-- Adjust phase based on your lifecycle needs -->
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>../${module.dep.out.dir}</outputDirectory> <!-- Adjust path as needed -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <excludes>
                        <exclude>**/emu/**</exclude>
                    </excludes>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <debug>false</debug>
                    <minmemory>256m</minmemory>
                    <maxmemory>1024m</maxmemory>
                    <quiet>true</quiet>
                    <doctitle>${project.name} ${project.version}</doctitle>
                    <windowtitle>${project.name} ${project.version}</windowtitle>
                    <splitindex>true</splitindex>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <javadocVersion>${jdk.version}</javadocVersion>
                    <links>
                        <link>https://docs.oracle.com/javase/21/docs/api/</link>
                    </links>
                    <linksource>true</linksource>
                    <detectOfflineLinks>false</detectOfflineLinks>
                    <excludePackageNames>*emu*</excludePackageNames>
                    <doclint>none</doclint>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal> <!-- Goal to execute a Java class -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <workingDirectory>.</workingDirectory>
                    <longModulepath>false</longModulepath>
                    <arguments>
                        <argument>-Dorg.lwjgl.util.Debug=true</argument>
                        <argument>-Djava.library.path=${module.dep.out.dir}</argument>
                        <argument>--module-path=${module.out.dir}${path.separator}${module.dep.out.dir}/gdx-backend-lwjgl3-1.12.1.jar${path.separator}${module.dep.out.dir}/gdx-1.12.1.jar${path.separator}${module.dep.out.dir}/gdx-platform-1.12.1-natives-desktop.jar${path.separator}${jnigen.dir}/gdx-jnigen-loader-2.4.1.jar</argument>
                        <argument>--module=desktop/gbw.melange.DesktopLauncher</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- parent project should delete ${module.out.dir} -->
            <id>parent-project</id>
            <activation>
                <file>
                    <missing>src</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${module.out.dir}</directory>
                                </fileset>
                                <fileset>
                                    <directory>${module.dep.out.dir}</directory>
                                </fileset>
                                <fileset>
                                    <directory>${jnigen.dir}</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- child projects should copy artifact into 'mods-mvn' -->
            <id>child-project</id>
            <activation>
                <file>
                    <exists>src</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-compiled-modules-to-"${module.out.dir}"</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>../${module.out.dir}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-jnigen-to-"${jnigen.dir}"</id>
                                <phase>install</phase> <!-- Adjust phase as needed -->
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.badlogicgames.gdx</groupId>
                                            <artifactId>gdx-jnigen-loader</artifactId>
                                            <version>2.4.1</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>../${jnigen.dir}</outputDirectory>
                                    <!-- Additional configurations if needed -->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
